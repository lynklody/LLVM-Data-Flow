digraph "CFG for 'test' function" {
	label="CFG for 'test' function";

	Node0x1d819c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{entry:\l  %a = alloca i32, align 4\l  %b = alloca i32, align 4\l  %c = alloca i32, align 4\l  %d = alloca i32, align 4\l  %e = alloca i32, align 4\l  %f = alloca i32, align 4\l  store i32 0, i32* %a, align 4\l  store i32 1, i32* %c, align 4\l  br label %do.body\l}"];
	Node0x1d819c0 -> Node0x1d82520;
	Node0x1d82520 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{do.body:                                          \l  %0 = load i32, i32* %a, align 4\l  %add = add nsw i32 %0, 1\l  store i32 %add, i32* %c, align 4\l  %1 = load i32, i32* %c, align 4\l  %2 = load i32, i32* %b, align 4\l  %mul = mul nsw i32 %1, %2\l  store i32 %mul, i32* %c, align 4\l  %3 = load i32, i32* %b, align 4\l  %cmp = icmp sgt i32 %3, 9\l  br i1 %cmp, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x1d82520:s0 -> Node0x1d82910;
	Node0x1d82520:s1 -> Node0x1d82980;
	Node0x1d82910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{if.then:                                          \l  %4 = load i32, i32* %d, align 4\l  %5 = load i32, i32* %c, align 4\l  %mul1 = mul nsw i32 %4, %5\l  store i32 %mul1, i32* %f, align 4\l  %6 = load i32, i32* %f, align 4\l  %sub = sub nsw i32 %6, 3\l  store i32 %sub, i32* %c, align 4\l  br label %if.end\l}"];
	Node0x1d82910 -> Node0x1d830c0;
	Node0x1d82980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{if.else:                                          \l  %7 = load i32, i32* %e, align 4\l  %add2 = add nsw i32 %7, 1\l  store i32 %add2, i32* %a, align 4\l  %8 = load i32, i32* %d, align 4\l  %div = sdiv i32 %8, 2\l  store i32 %div, i32* %e, align 4\l  br label %if.end\l}"];
	Node0x1d82980 -> Node0x1d830c0;
	Node0x1d830c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.end:                                           \l  %9 = load i32, i32* %b, align 4\l  store i32 %9, i32* %a, align 4\l  br label %do.cond\l}"];
	Node0x1d830c0 -> Node0x1d82d10;
	Node0x1d82d10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{do.cond:                                          \l  %10 = load i32, i32* %a, align 4\l  %cmp3 = icmp slt i32 %10, 9\l  br i1 %cmp3, label %do.body, label %do.end\l|{<s0>T|<s1>F}}"];
	Node0x1d82d10:s0 -> Node0x1d82520;
	Node0x1d82d10:s1 -> Node0x1d838e0;
	Node0x1d838e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{do.end:                                           \l  %11 = load i32, i32* %a, align 4\l  %add4 = add nsw i32 %11, 1\l  store i32 %add4, i32* %a, align 4\l  ret void\l}"];
}
